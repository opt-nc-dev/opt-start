# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================


spring:
    profiles:
        active: test
    application:
        name: poc
    jackson:
        serialization.write_dates_as_timestamps: false
    cache:
        type: none
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:h2:mem:poc;DB_CLOSE_DELAY=-1
        name:
        username:
        password:
    jpa:
        database-platform: io.github.jhipster.domain.util.FixedH2Dialect
        database: H2
        open-in-view: false
        show-sql: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.hbm2ddl.auto: validate
    mail:
        host: localhost
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML

liquibase:
    contexts: test

security:
    basic:
        enabled: false

server:
    port: 10344
    address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 1
        max-pool-size: 50
        queue-capacity: 10000
    # To test logstash appender
    logging:
        logstash:
            enabled: true
            host: localhost
            port: 5000
            queue-size: 512
    mail:
        from: test@localhost
        base-url: http://127.0.0.1:8080
    security:
        authentication:
            jwt:
                secret: bdb514664a7f4a1b24ca090dcb976eb6b50b06a5
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: true
            report-frequency: 60 # in seconds

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================

application:
    front-end:
        security-type: local
        auth-url: https://auth-test.intranet.opt/
    back-end:
        app-url:

# ===================================================================
# OPT - Specific configuration
#
# Allows the user of different profiles based on configuration
# - type "local" : user rights are fetched from this config file under "credentials"
# - type "jwt" : user rights are decoded from the JWT token sent by the client
# ===================================================================
opt:
    elasticsearch:
        cluster-nodes: http://localhost:9200
        context:
        test-mode: true
        username:                                             # les username/password du cluster d'integration
        password:
        scan-base-package: nc.opt
        indexed-objects:
    security:
        type: local # can be "local" or "jwt"
        credentials: # only used when type = local
            users:
                admin:
                    login: admin
                    nom: AD
                    prenom: Min
                    roles: ROLE_ADMIN,ROLE_USER
                    ressources:
                        ROLE_ADMIN: "ressource1"
                        ROLE_USER: ""
    kafka:
        enabled: true
        bootstrapServers: ""
